{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SCCA,SAAAC,GAA8BC,GAACA,EAAEC,UAAEA,EAAY,GAAEC,MAAEA,EAAQ,GAAEC,OAAEA,EAAS,UAASC,KAAEA,EAAO,UAASC,MAAEA,EAAQ,KAC3G,MAAO,yCAC4BL,0BACjBC,WAAmBC,0GAEEA,kKAGUC,8HAGHC,2D,+BDNhD,IAAIE,EAAQT,EAAAU,QAAOC,QAEfC,EAAO,EACX,MAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,YAChCC,WAAYF,SAASC,cAAc,gBACnCE,SAAUH,SAASC,cAAc,cACjCG,aAAcJ,SAASC,cAAc,oBAavC,SAASI,EAAkBC,GACzB,MAAMC,EAASD,EAAIE,cACfD,IAAaT,EAAKI,YAAgBR,IAAUT,EAAAU,QAAOC,SAClDW,IAAYT,EAAKK,UAAcT,IAAUT,EAAAU,QAAOc,QAIrDZ,EAAO,EAEHU,IAAWT,EAAKI,YAClBR,EAAQT,EAAAU,QAAOC,QACfE,EAAKI,WAAWQ,UAAUC,IAAI,aAC9Bb,EAAKK,SAASO,UAAUE,OAAO,cACtBL,IAAWT,EAAKK,WACzBT,EAAQT,EAAAU,QAAOc,MACfX,EAAKI,WAAWQ,UAAUE,OAAO,aACjCd,EAAKK,SAASO,UAAUC,IAAI,cAG9BjB,EAAMmB,gBACNC,I,CA9BEC,OAAOC,OAAOlB,GAAMmB,MAAKC,IAAOA,KAClCC,QAAQC,MAAM,0BAGhBtB,EAAKC,QAAQsB,mBAAmB,WAAY,gCAC5CvB,EAAKwB,SAAWtB,SAASC,cAAc,aAEvCH,EAAKI,WAAWqB,iBAAiB,QAASlB,GAC1CP,EAAKK,SAASoB,iBAAiB,QAASlB,GAyBxC,MAiBMmB,EAAW,IAAIC,sBAXH,CAACC,EAASC,KAC1BD,EAAQE,SAAQC,IACVA,EAAMC,gBACJjC,EAAOH,EAAMqC,cAnDN,KAoDTlC,GAAQ,EACRiB,I,GAGJ,GAdiB,CACnBkB,KAAM,KACNC,WAAY,QACZC,UAAW,IAgBb,SAASpB,IAEM,IAATjB,IACEH,EAAMyC,WAAa,EACrBrC,EAAKC,QAAQqC,UAAY,GAEzBtC,EAAKC,QAAQqC,UAAY,qDAI7B,MAAMC,EAAS3C,EAAM4C,cAAczC,EAvEpB,GAyEfC,EAAKC,QAAQsB,mBAAmB,YASlC,SAA6BgB,GAC3B,OAAOA,EAAOE,KAAIC,GAASrD,EAAqBqD,KAAQC,KAAK,G,CAVhBC,CAAoBL,IAEnD,IAAVxC,GAAiBH,EAAMqC,cA3EZ,GA2EsC,EACnDP,EAASmB,QAAQ7C,EAAKwB,UACbzB,IAASH,EAAMqC,cA7EX,IA8EbP,EAASoB,UAAU9C,EAAKwB,S,CAmC5B,SAASuB,IACPhD,EAAO,EACPiB,G,CA7BFA,IAIAhB,EAAKC,QAAQwB,iBAAiB,SAE9B,SAAwBjB,GAEtBA,EAAIwC,iBAEJ,MAAMC,EAAWzC,EAAI0C,OAAOC,QAAQ,SACpC,IAAKF,EACH,OAEF,MAAMG,EAASH,EAASI,QAAQC,OAE1BZ,EAAQ9C,EAAM2D,aAAaH,GACjC,IAAKV,EAEH,YADArB,QAAQC,MAAM,mBAAmB8B,6BAInCpD,EAAKM,aAAagC,WAAY,EAAAkB,EAAA3D,SAAkB6C,IAEhD,EAAAe,EAAAC,gBAAeX,E","sources":["src/js/library.js","src/js/film-card.js"],"sourcesContent":["import myLibs from './library-service';\nimport createFilmCardMarkup from './film-card';\nimport createModalMarkup from './modal-film';\n\nimport { openMovieModal } from './library-modal';\n\nlet myLib = myLibs.watched;\n\nlet page = 1;\nconst per_page = 9;   \n\nconst refs = {\n  gallery: document.querySelector('.gallery'),\n  btnWatched: document.querySelector('#btn-watched'),\n  btnQueue: document.querySelector('#btn-queue'),\n  modalContent: document.querySelector(\".modal__content\"),\n};\n\nif (Object.values(refs).some(el => !el)) {\n  console.error('Error: invalid markup!');\n}\n\nrefs.gallery.insertAdjacentHTML('afterend', `<div class=\"js-guard\"></div>`); \nrefs.guardDiv = document.querySelector('.js-guard');\n\nrefs.btnWatched.addEventListener('click', onBtnLibraryClick);\nrefs.btnQueue.addEventListener('click', onBtnLibraryClick);\n\nfunction onBtnLibraryClick(evt) {\n  const curBtn = evt.currentTarget;\n  if (((curBtn === refs.btnWatched) && (myLib === myLibs.watched)) ||\n      ((curBtn === refs.btnQueue) && (myLib === myLibs.queue))) {\n    return;\n  }\n\n  page = 1;\n\n  if (curBtn === refs.btnWatched) {\n    myLib = myLibs.watched;\n    refs.btnWatched.classList.add('is-active');\n    refs.btnQueue.classList.remove('is-active');\n  } else if (curBtn === refs.btnQueue) {\n    myLib = myLibs.queue;\n    refs.btnWatched.classList.remove('is-active');\n    refs.btnQueue.classList.add('is-active');\n  }\n\n  myLib.refreshMovies();\n  showLibrary();\n}\n\nconst observerOpts = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 1.0\n}\n\nconst onObserve = (entries, observer) => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      if (page < myLib.getCountPages(per_page)) {\n        page += 1;\n        showLibrary();  \n      }\n    }\n  });\n}\n\nconst observer = new IntersectionObserver(onObserve, observerOpts);\n\nfunction showLibrary() {\n\n  if (page === 1) {   \n    if (myLib.getCount() > 0) {\n      refs.gallery.innerHTML = '';\n    } else {  \n      refs.gallery.innerHTML = `<li class=\"gallery_pin\">The library is empty</li>`;\n    } \n  }\n\n  const movies = myLib.getMoviesPage(page, per_page); \n\n  refs.gallery.insertAdjacentHTML('beforeend', createGalleryMarkup(movies));\n\n  if ((page === 1) && (myLib.getCountPages(per_page) > 1)) {\n    observer.observe(refs.guardDiv);\n  } else if (page === myLib.getCountPages(per_page)) {\n    observer.unobserve(refs.guardDiv);\n  }\n}\n\nfunction createGalleryMarkup(movies) {\n  return movies.map(movie => createFilmCardMarkup(movie)).join('');\n}\n\nshowLibrary();\n\n// ----------  MODAL  ----------\n\nrefs.gallery.addEventListener(\"click\", onGalleryClick);\n\nfunction onGalleryClick(evt) {\n\n  evt.preventDefault(); \n  \n  const filmCard = evt.target.closest(\".card\");\n  if (!filmCard) {\n    return;  \n  }\n  const filmId = filmCard.dataset.filmid;\n\n  const movie = myLib.getMovieById(filmId);\n  if (!movie) {\n    console.error(`Movie with id = ${filmId} isn't found in library!`);\n    return;\n  }\n    \n  refs.modalContent.innerHTML = createModalMarkup(movie);\n\n  openMovieModal(onAfterModalClose);\n}\n\nfunction onAfterModalClose() {\n  page = 1;\n  showLibrary();\n}\n","export default\nfunction createFilmCardMarkup({id, posterURL = '', title = '', genres = 'no info', year = 'no info', votes = '' }) {\n  return ` \n    <div class=\"card\" data-filmid=\"${id}\">\n        <img src=\"${posterURL}\" alt=\"${title}\" class=\"card__pic\">\n        <div class=\"card__information\">\n            <p class=\"card__film-name\">${title}</p>\n            <div class=\"card__additional-information\">\n                <ul class=\"card__gener-list\">\n                    <li class=\"card__gener-item\">${genres}</li>\n                </ul>\n                <div class=\"card__vl\"></div>\n                <p class=\"card__release-year\">${year}</p>\n            </div>\n        </div>\n    </div>\n  `;\n}    \n"],"names":["$54T7b","parcelRequire","$80c4189e6cc88ea4$export$2e2bcd8739ae039","id","posterURL","title","genres","year","votes","$93effc6fc56091ad$var$myLib","default","watched","$93effc6fc56091ad$var$page","$93effc6fc56091ad$var$refs","gallery","document","querySelector","btnWatched","btnQueue","modalContent","$93effc6fc56091ad$var$onBtnLibraryClick","evt","curBtn","currentTarget","queue","classList","add","remove","refreshMovies","$93effc6fc56091ad$var$showLibrary","Object","values","some","el","console","error","insertAdjacentHTML","guardDiv","addEventListener","$93effc6fc56091ad$var$observer","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","getCountPages","root","rootMargin","threshold","getCount","innerHTML","movies","getMoviesPage","map","movie","join","$93effc6fc56091ad$var$createGalleryMarkup","observe","unobserve","$93effc6fc56091ad$var$onAfterModalClose","preventDefault","filmCard","target","closest","filmId","dataset","filmid","getMovieById","$73ES2","$kWfXz","openMovieModal"],"version":3,"file":"library.f02d59c7.js.map"}